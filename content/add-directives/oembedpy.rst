========
oEmbedPy
========

:PyPI URL: https://pypi.org/project/oEmbedPy
:Repository: https://github.com/attakei/oEmbedPy
:Document: https://oembedpy.readthedocs.io/
:Author: Kazuya Takei
:Category:
  - ディレクティブ追加
  - コンテンツ埋め込み

より簡単に外部コンテンツを埋め込むためのライブラリ。

概要
====

oEmbedPy自体はPythonプロジェクトの1つで、【oEmbed】 [#]_ という規格を使い、コンテンツのURLを指定するだけで他サイトでそのコンテンツを埋め込むためのHTMLを取得することが出来るクライアントライブラリです。

.. [#] 外部でコンテンツを埋め込むための統一規格。 https://oembed.com を参照。

この中には、SphinxとMkDocs向けのアダプタを同梱しており、
Sphinx拡張としては非常にシンプルな使い方で埋め込みを実現するためのディレクティブが提供されています。

使用方法
========

インストール
------------

あくまで公開されているライブラリ名は "oEmbedPy" なので、インストール時に注意する必要があります。

.. code::

    pip install oembedpy

設定等
------

Sphinx拡張としての名称は ``oembedpy.adapters.sphinx`` なので、 ``extensions`` にはこれを登録します。

.. code:: python

    extensions = [
        "oembedpy.adapters.sphinx",
    ]

書き方
------

``oembed`` というディレクティブに「コンテンツとして埋め込みたいURL」を 引数として引き渡すだけで良いです。
ドキュメントのビルド時に自動でoEmbedのAPI等にアクセスを行い必要な情報を取得し、
ビルダーによる出力時には埋め込み用HTMLをアウトプットしてくれます。

例えば、Xのポストをサイトに埋め込もうとしたとき、次の手順を踏む必要があります。 [#]_

.. textlint-disable

.. [#] もしかしたら、専用のSphinx拡張があるかもしれないが、今回は取り上げない。

.. textlint-enable

#. ポストの右上メニューから「ポストを埋め込む」をクリックする。
#. 遷移先である埋め込み用設定用のページの指示に従ってHTMLを組み立てる。
#. 組み立てたHTMLを ``raw`` ディレクティブを使って「HTMLそのまま」の形式で貼り付ける。

この形式は手間な上に、ドキュメント上に「分かりづらいソース」を残すことになってしまいます。

一方で、oEmbedPy内のSphinx拡張をつかうと、この1行だけで前述のやりたいことが完結するようになっています。

.. code-block:: rst

    .. oembed:: https://x.com/attakei/status/1916014199693627667

寸評
====

前述の通り、使い方ソースが簡潔になるのが特徴となっています。
また、最大の特徴として「oEmbed APIを提供しているサービスに対して一律で利用が出来る」という点が大きいです。

例えば、「Instagramの投稿などを埋め込む」ためのSphinx拡張は検索する限り存在しません。
本来なら専用の拡張を作る必要があるのですが、InstagramはoEmbed APIのエンドポイントが存在するため、
このライブラリを使うだけで解決できるというのが利点となっています。

一方で注意しておく必要があるポイントとして「ビルド時に通信が発生する」という点が挙げられます。
これは埋め込みHTMLを事前に収集する方法と比較すると、「API経由で埋め込みHTMLを取得する」という構成を考えれば至極当然な話ではあります。
しかし、この副作用として「ビルド時間がどうしても伸びる」「API側がダウンしているとビルドがおかしくなる」という部分は意識しておくべきでしょう。

とはいえ、頻繁にビルドしなければ基本的に恩恵のほうがはるかに大きいと言えます。
